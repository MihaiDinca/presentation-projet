{\rtf1\ansi\deff0\adeflang1025
{\fonttbl{\f0\froman\fprq2\fcharset0 Times New Roman;}{\f1\froman\fprq2\fcharset2 Symbol;}{\f2\fswiss\fprq2\fcharset0 Arial;}{\f3\fnil\fprq2\fcharset0 Microsoft YaHei;}{\f4\fnil\fprq2\fcharset0 Lucida Sans;}{\f5\fswiss\fprq0\fcharset128 Lucida Sans;}}
{\colortbl;\red0\green0\blue0;\red128\green128\blue128;}
{\stylesheet{\s0\snext0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af6\langfe2052\dbch\af4\afs24\lang1081\loch\f0\fs24\lang1036 Default;}
{\s15\sbasedon0\snext16\sb240\sa120\keepn\hich\af3\dbch\af4\afs28\loch\f2\fs28 Heading;}
{\s16\sbasedon0\snext16\sb0\sa120 Text body;}
{\s17\sbasedon16\snext17\sb0\sa120\dbch\af5 List;}
{\s18\sbasedon0\snext18\sb120\sa120\noline\i\dbch\af5\afs24\ai\fs24 Caption;}
{\s19\sbasedon0\snext19\noline\dbch\af5 Index;}
}{\info{\creatim\yr0\mo0\dy0\hr0\min0}{\revtim\yr0\mo0\dy0\hr0\min0}{\printim\yr0\mo0\dy0\hr0\min0}{\comment OpenOffice}{\vern4120}}\deftab709

{\*\pgdsctbl
{\pgdsc0\pgdscuse195\pgwsxn11906\pghsxn16838\marglsxn1134\margrsxn1134\margtsxn1134\margbsxn1134\pgdscnxt0 Default;}}
\formshade\paperh16838\paperw11906\margl1134\margr1134\margt1134\margb1134\sectd\sbknone\sectunlocked1\pgndec\pgwsxn11906\pghsxn16838\marglsxn1134\margrsxn1134\margtsxn1134\margbsxn1134\ftnbj\ftnstart1\ftnrstcont\ftnnar\aenddoc\aftnrstcont\aftnstart1\aftnnrlc
\pgndec\pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af6\langfe2052\dbch\af4\afs24\lang1081\loch\f0\fs24\lang1036{\rtlch \ltrch\loch
def print_board(board):\line \line \tab print "The board look like this: \\n"\line \line \tab for i in range(3):\line \tab \tab print " ",\line \tab \tab for j in range(3):\line \tab \tab \tab if board[i*3+j] == 1:\line \tab \tab \tab \tab print 'X',\line \tab \tab \tab elif board[i*3+j] == 0:\line \tab \tab \tab \tab print 'O',\tab \line \tab \tab \tab elif board[i*3+j] != -1:\line \tab \tab \tab \tab print board[i*3+j]-1,\line \tab \tab \tab else:\line \tab \tab \tab \tab print ' ',\line \tab \tab \tab \line \tab \tab \tab if j != 2:\line \tab \tab \tab \tab print " | ",\line \tab \tab print\line \tab \tab \line \tab \tab if i != 2:\line \tab \tab \tab print "-----------------"\line \tab \tab else: \line \tab \tab \tab print \line \tab \tab \tab \line def print_instruction():\line \tab print "Please use the following cell numbers to make your move"\line \tab print_board([2,3,4,5,6,7,8,9,10])\line \line \line def get_input(turn):\line \line \tab valid = False\line \tab while not valid:\line \tab \tab try:\line \tab \tab \tab user = raw_input("Where would you like to place " + turn + " (1-9)? ")\line \tab \tab \tab user = int(user)\line \tab \tab \tab if user >= 1 and user <= 9:\line \tab \tab \tab \tab return user-1\line \tab \tab \tab else:\line \tab \tab \tab \tab print "That is not a valid move! Please try again.\\n"\line \tab \tab \tab \tab print_instruction()\line \tab \tab except Exception as e:\line \tab \tab \tab print user + " is not a valid move! Please try again.\\n"\line \tab \tab \line def check_win(board):\line \tab win_cond = ((1,2,3),(4,5,6),(7,8,9),(1,4,7),(2,5,8),(3,6,9),(1,5,9),(3,5,7))\line \tab for each in win_cond:\line \tab \tab try:\line \tab \tab \tab if board[each[0]-1] == board[each[1]-1] and board[each[1]-1] == board[each[2]-1]:\line \tab \tab \tab \tab return board[each[0]-1]\line \tab \tab except:\line \tab \tab \tab pass\line \tab return -1\line \line def quit_game(board,msg):\line \tab print_board(board)\line \tab print msg\line \tab quit()\line \line def main():\line \tab \line \tab # Start Game\line \tab # Change turns\line \tab # Checks for winner\line \tab # Quits and redo board\line \tab \line \tab print_instruction()\line \line \tab board = []\line \tab for i in range(9):\line \tab \tab board.append(-1)\line \line \tab win = False\line \tab move = 0\line \tab while not win:\line \line \tab \tab # Print board\line \tab \tab print_board(board)\line \tab \tab print "Turn number " + str(move+1)\line \tab \tab if move % 2 == 0:\line \tab \tab \tab turn = 'X'\line \tab \tab else:\line \tab \tab \tab turn = 'O'\line \line \tab \tab # Get player input\line \tab \tab user = get_input(turn)\line \tab \tab while board[user] != -1:\line \tab \tab \tab print "Invalid move! Cell already taken. Please try again.\\n"\line \tab \tab \tab user = get_input(turn)\line \tab \tab board[user] = 1 if turn == 'X' else 0\line \line \tab \tab # Continue move and check if end of game\line \tab \tab move += 1\line \tab \tab if move > 4:\line \tab \tab \tab winner = check_win(board)\line \tab \tab \tab if winner != -1:\line \tab \tab \tab \tab out = "The winner is " \line \tab \tab \tab \tab out += "X" if winner == 1 else "O" \line \tab \tab \tab \tab out += ""\line \tab \tab \tab \tab quit_game(board,out)\line \tab \tab \tab elif move == 9:\line \tab \tab \tab \tab quit_game(board,"No winner")\line \line if __name__ == "__main__":\line \tab main()\line \tab \line }
\par }